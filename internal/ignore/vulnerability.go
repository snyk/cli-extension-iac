package ignore

import "time"

type vulnerabilityMatcher struct {
	matchers []expiringMatcher
}

func (m *vulnerabilityMatcher) addIgnore(expires time.Time, pattern string) error {
	var matcher expiringMatcher

	matcher.setExpires(expires)

	if err := matcher.setPattern(pattern); err != nil {
		return err
	}

	m.matchers = append(m.matchers, matcher)

	return nil
}

func (m *vulnerabilityMatcher) match(now time.Time, parts ...string) bool {
	for _, matcher := range m.matchers {
		if matcher.match(now, parts...) {
			return true
		}
	}

	return false
}
